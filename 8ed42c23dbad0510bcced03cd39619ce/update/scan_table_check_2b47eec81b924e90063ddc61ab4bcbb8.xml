<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_table_check">
    <scan_table_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <advanced>true</advanced>
        <category>code_sanity</category>
        <conditions table="sys_dictionary">elementISNOTEMPTY^internal_type!=collection^EQ<item endquery="false" field="element" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item display_table="sys_glide_object" display_value="Collection" endquery="false" field="internal_type" goto="false" newquery="false" operator="!=" or="false" value="collection"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </conditions>
        <description>Column names are not just column names - they are also used in scripts as object member variables. Some key words are restricted in JavaScript others may clash with existing members of GlideRecord or other classes used to represent records. As a result, some column names should just be avoided. Examples are "constructor", "class" and "query".</description>
        <documentation_url/>
        <finding_type>scan_finding</finding_type>
        <name>CodeSanity - Forbidden column names</name>
        <priority>1</priority>
        <resolution_details>Replace such columns with new columns. Change existing configuration and code to use the new columns.&#13;
Consider a migration strategy to transform existing production data from the old columns into new columns.</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {

	if (x_snc_codesanity.IsCheckApplicableToRecord())
	{
		var aForbidden = [
			'constructor',
			'class',
			'query',
			'update',
			'insert',
			'next'
			]
		if (x_snc_devtools.ArrayValueExists(aForbidden,x_snc_devtools.GetStringValue(current.element)) == true)
		{
			engine.finding.increment();
		}
	}

})(engine);]]></script>
        <short_description>Some column names must be avoided </short_description>
        <sys_class_name>scan_table_check</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-05-16 13:14:39</sys_created_on>
        <sys_id>2b47eec81b924e90063ddc61ab4bcbb8</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>CodeSanity - Forbidden column names</sys_name>
        <sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity">8ed42c23dbad0510bcced03cd39619ce</sys_package>
        <sys_policy/>
        <sys_scope display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</sys_scope>
        <sys_update_name>scan_table_check_2b47eec81b924e90063ddc61ab4bcbb8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-05-16 13:21:09</sys_updated_on>
        <table>sys_dictionary</table>
        <use_manifest>false</use_manifest>
    </scan_table_check>
    <sys_translated_text action="delete_multiple" query="documentkey=2b47eec81b924e90063ddc61ab4bcbb8"/>
</record_update>
